name: Blue-Green Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Настройка SSH
        uses: webfactory/ssh-agent@v0.8.1
        with:
          ssh-private-key: ${{ secrets.SECRET_PRIVATE_KEY }}

      - name: Получаем текущую версию (target_version)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SECRET_HOST }}
          username: ${{ secrets.SECRET_USER }}
          key: ${{ secrets.SECRET_PRIVATE_KEY }}
          script: |
            if [ -f ~/target_version.txt ]; then
              cat ~/target_version.txt
            else
              echo "Test_blue" > ~/target_version.txt
            fi

      - name: Скачиваем target_version.txt
        run: |
          scp -o StrictHostKeyChecking=no -i ~/.ssh/deploy_key ${{ secrets.SECRET_USER }}@${{ secrets.SECRET_HOST }}:~/target_version.txt .

      - name: Определяем target_version
        run: |
          CURRENT_VERSION=$(cat target_version.txt)
          echo "Текущая версия: $CURRENT_VERSION"
          if [ "$CURRENT_VERSION" == "Test_blue" ]; then
            TARGET_VERSION="Test_green"
          else
            TARGET_VERSION="Test_blue"
          fi
          echo "TARGET_VERSION=${TARGET_VERSION}" >> $GITHUB_ENV

      - name: Копируем index.html на сервер
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SECRET_PRIVATE_KEY }}
          REMOTE_HOST: ${{ secrets.SECRET_HOST }}
          REMOTE_USER: ${{ secrets.SECRET_USER }}
          TARGET: /var/www/${{ env.TARGET_VERSION }}
        with:
          source: ./index.html

      - name: Обновляем симлинк
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SECRET_HOST }}
          username: ${{ secrets.SECRET_USER }}
          key: ${{ secrets.SECRET_PRIVATE_KEY }}
          script: |
            sudo ln -sfn "/var/www/${TARGET_VERSION}" /var/www/current
            echo "${TARGET_VERSION}" > ~/target_version.txt
            sudo systemctl restart nginx
